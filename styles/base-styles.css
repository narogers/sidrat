/**
 * base-styles.css
 * October 2011
 *
 * These styles form the template for the general layout of the DWIM application. Rather
 * than trying to use a grid system like Blueprint or 960gs the idea is to experiment
 * with the flexible box model as an alternative. Despite not being well supported it
 * provides a lighter weight solution to designs which can shrink and grow with the
 */
/**
 * First define some fonts that will be used to make the page more visually
 * appealing than the default typography
 */
@font-face {
    font-family: 'HattoriHanzoLight';
    src: url('../resources/Hattori_Hanzo-webfont.eot');
    src: url('../resources/Hattori_Hanzo-webfont.eot?#iefix') format('embedded-opentype'),
         url('../resources/Hattori_Hanzo-webfont.woff') format('woff'),
         url('../resources/Hattori_Hanzo-webfont.ttf') format('truetype'),
         url('../resources/Hattori_Hanzo-webfont.svg#HattoriHanzoLight') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'HattoriHanzoLightItalic';
    src: url('../resources/Hattori_Hanzo_Italic-webfont.eot');
    src: url('../resources/Hattori_Hanzo_Italic-webfont.eot?#iefix') format('embedded-opentype'),
         url('../resources/Hattori_Hanzo_Italic-webfont.woff') format('woff'),
         url('../resources/Hattori_Hanzo_Italic-webfont.ttf') format('truetype'),
         url('../resources/Hattori_Hanzo_Italic-webfont.svg#HattoriHanzoLightItalic') format('svg');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: 'KingthingsWroteRegular';
    src: url('../resources/Kingthings_Wrote-webfont.eot');
    src: url('../resources/Kingthings_Wrote-webfont.eot?#iefix') format('embedded-opentype'),
         url('../resources/Kingthings_Wrote-webfont.woff') format('woff'),
         url('../resources/Kingthings_Wrote-webfont.ttf') format('truetype'),
         url('../resources/Kingthings_Wrote-webfont.svg#KingthingsWroteRegular') format('svg');
    font-weight: normal;
    font-style: normal;

}

html,
body {
  width: 100%;
  height: 100%;
  
  font-family: 'HattoriHanzoiLight', 'Optima', Verdana, sans serif;
  font-size: 12pt;
  line-height: 18px;
}

body {
  margin: auto;
  width: 960px;
}

/**
 * General styles that apply to elements across the entire page - link styling,
 * default fonts, etc
 */
a, a:visited {
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

a:hover > img {
  text-decoration: none;
}

a.active {
  font-weight: bold;
}

h1 {
  font-size: 175%;
  margin-bottom: 16px;
}

/**
 * For elements that might need a top border to simulate a horizontal rule
 */
.bordered {
  border-top: rgb(64, 64, 64) 2px solid;
  border-bottom: rgb(64, 64, 64) 2px solid;
}

nav a, nav a:hover, nav a:visited, nav a:active {
  text-decoration: none;
}

/**
 * Using a sixteen column grid chew up two columns along with 30px of padding. Thus the
 * image itself should be 150px in width or two columns wide
 */
header, footer {
  background: rgb(5, 122, 201);
}

nav.global a:hover, footer a:hover {
  text-decoration: none;
}

header {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
  
  -webkit-box-align: horizontal;
  -moz-box-align: horizontal;
  box-align: horizontal;
}

header .logo {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
  
  min-width: 150px;
  padding-right: 30px;
}

/** 
 * Fill the rest of the space with the banner except for the right most two columns
 * which should be reserved for white space - thus 11 columns. One upcoming goal is
 * to find a distinctive web font for this space and for the logo
 */
header .banner {
  -webkit-box-flex: 3;
  box-flex: 3;
  
  padding-right: 30px;
  padding-top: 15px;
}

header h1 {
  text-align: left;
  padding: 0;
  margin-top: 27px;
  font-size: 400%;
  color: rgb(207, 212, 215);
}

header .tagline
{
  font-family: 'KingthingsWroteRegular', Verdana, serif;
  text-align: left;
  text-transform: lowercase;
	
  padding: 0;
  margin: 45px 0 0 30px;
  text-indent: 60px;
  text-align: right;
  font-size: 125%;

}

.search {
  display: -webkit-box;
  display: box;
  -webkit-box-flex: 1;
  box-flex;
  -webkit-box-align: vertical;
  box-align: vertical;
  -webkit-box-pack: center;
  box-pack: center;
  
  padding-top: 15px;
}

.search input[type="text"] {
  border-radius: 10px;
  padding: 6px 9px;
}

.search input[type="submit"] {
  font-size: 120%;
  padding: 6px 9px;
  text-align: right;
}

.search a {
  display: block;
}


/**
 * Global navigation is a good place to play with the flexible box model. Start * by making the navigation span the entire top. Next make the list display 
 * inline with each having a width of 150px and a flexible box model of 1 each 
 * so they balance out evenly.
 */
nav.global {
  display: -webkit-box;
  display: box;
  box-orient: horizontal;
  
  -webkit-box-flex: 1;
  box-flex: 1;
  
  color: rgb(43, 89, 201);
  background: rgb(207, 212, 215);
  border: rgb(0, 0, 0) 1px solid;
}

nav.global > a,
nav.global > .submenu {
  display: block;
  min-width: 100px;
  padding: 10px;
  border-right: rgb(0, 0, 0) 1px solid;
  background: rgb(240, 240, 240);
  
  -webkit-box-flex: 1;
  box-flex: 1;
  
  -webkit-box-align: center;
  box-align: center;
  text-align: center;
}

nav.global a:last-child {
  border-right: 0;
}

nav.global a.active {
  background: rgb(255, 255, 255);
}

/**
 * This second approach is an attempt to have a dropdown that only appears when
 * you hover over it
 */
nav.global ul {
  list-style-type: none;
  display: -webkit-box;
  display: box;

  -webkit-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-flex: 1;
  box-flex: 1;
  
  margin: 0;
  padding: 0;
}

nav.global ul li {
  display: -webkit-box;
  display: box;
  -webkit-box-flex: 1;
  box-flex: 1;
  
  text-align: left;
  border: 1px rgb(0, 0, 0) solid;
}

nav.global ul.primary {
}

nav.global ul.secondary {
  -webkit-box-orient: vertical;
  box-orient: vertical;
  display: none;
}

nav.global ul.secondary li {
  border: 0;
}

nav.global ul.primary li:hover ul.secondary {
  position: relative;
  top: 36px;
  left: -150px;
  display: block;
}

nav.global li.menu-break {
  content: '\0020';
  height: 27px;
}

/**
 * The page context sets the context for the rest of the page. This includes
 * local navigation (breadcrumbs) as well as the header and a brief summary of
 * that page's main focus
 */
.page_context {
  display: box;
  box-orient: vertical;
  -webkit-box-flex: 1;
  box-flex: 1;
  
  min-width: 600px;
  padding-right: 120px;
}

nav.breadcrumbs {
  padding-top: 10px;
  font-size: 85%;
  
  -webkit-box-flex: 1;
  box-flex: 1;
}

nav.breadcrumbs a:after {
  content: ' \00bb';
}

/**
 * The meat of most top level pages are the lists of grouped content (by media 
 * format, by Doctor, or by companion. These 'clusters' consist of a section 
 * heading followed by a list of figures which should be grouped into logical
 * columns and rows
 */
.cluster {
  display: -webkit-box;
  display: box;
  -webkit-box-flex: 1;
  box-flex: 1;
  -webkit-box-align: start;
  box-align: start;
  min-width: 800px;
  
  margin-bottom: 36px;
}

.cluster h2 {
  display: block;
  line-height: 27px;
}

.cluster .subgroup {
  display: -webkit-box;
  display: box;
  -webkit-box-orient: vertical;
  box-orient: vertical;
  -webkit-box-pack: start;
  box-pack: start;
  -webkit-box-align: start;
  box-align: start;
  -webkit-box-flex: 1;
  box-flex: 1;
}

.cluster figure {
  -webkit-box-flex: 1;
  box-flex: 1;
  
  min-width: 150px; 
}

.cluster figcaption {
  font-size: 90%;
  margin: 10px 0 0 5px;
  
  text-align: left;
}

.cluster figure img {
  border-radius: 16px;
}

.cluster input[type='checkbox'] {
  -webkit-box-flex: 1;
  box-flex: 1;
  min-width: 100px;
  
  font-weight: bold;
}

/**
 * Secondary pages contain other elements than a cluster of links to subsets
 * of the overall collection. One key feature of almost every page (including
 * search) is a featured item. In most cases this should render at the top just
 * below the breadcrumbs although it should appear in the flow of the page.
 */
.featured_item {
  display: -webkit-box;
  display: box;
  min-width: 400px;
  
  border-top: rgb(128, 128, 128) 2px solid;
  border-bottom: rgb(128, 128, 128) 2px solid;
  padding: 12px 90px 12px 0;
}
 
.featured_item img.logo {
  -webkit-box-flex: 1;
  box-flex: 1;
  
  margin-right: 30px;
  border-radius: 16px;
  
  -webkit-box-shadow: 6px 6px 3px rgb(200, 200, 200);
  box-shadow: 6px 6px 3px rgb(200, 200, 200);
}

.featured_item .details {
  padding-right: 90px;
}

.featured_item .creator, 
.featured_item .publication_date,
.featured_item .rating,
.featured_item .summary {
  -webkit-box-flew: 4;
  box-flex: 4;
}

.featured_item .rating {
  padding: 9px 0;
}

.featured_item .summary {
  margin-top: 9px;
  font-size: 80%;
}

/**
 * One possible approach to sorting is to migrate the reordering to a 
 * menu above the tables. This is only active on the video content but could
 * very easily be ported to other views as a way of breaking up the content
 * further
 */
nav.filters {
  display: -webkit-box;
  display: box;
  -webkit-box-flex: 1;
  box-flex: 1;
  
  padding: 9px 0;
}

nav.filters a {
  display: block;
  text-align: left;
  padding: 0 15px;

  border-right: rgb(0, 0, 0) 1px solid;
}

nav.filters a:last-child {
  border-right: 0;
}

/**
 * Next up are the items themselves. Each view is a little bit different but
 * they all share common features which can be taken advantage of to lighten
 * up the CSS load a little.
 */
.entries {
  display: -webkit-box;
  display: box;
  clear: both;
  
  -webkit-box-orient: vertical;
  box-orient: vertical;
  
  margin-top: 18px;
  padding-top: 18px;
  font-size: 90%;
}

.entries h2 {
  padding-top: 18px;
}

.entries h2:first-child {
  padding-top: 0;
  margin-top: 0;
}

.entries table {
  -webkit-box-flex: 1;
  box-flex: 1;
}

.entries table td {
  margin-left: 16px;
  padding: 6px;
}

.entries table td:last-child {
  margin-left: 0;
}

.entries table thead {
  font-size: 110%;
  font-weight: bold;
}

.entries table thead td {
  background: rgb(216, 216, 216);
}

.entries table tbody tr:nth-child(2n) {
  background: rgb(240, 240, 240);
}

.entries td {
  vertical-align: top;
}

/**
 * Here we have a little diversion to define column widths for various types
 * of content. In theory these can be defined once instead of having to do it
 * for each different view.
 */
.entries .title {
  width: 15em;
}

.entries .author {
  width: 10em;
}

.entries .episode_number {
  width: 4em;
}

.entries .release_date {
  width: 8em;
}

.entries .featuring {
  width: 8em;
}

.entries .rating {
  width: 8em;
  overflow: hidden;
  text-indent: -999em;
}

.entries .status {
  width: 6em;
}

.entries nav.controls {
  -webkit-box-flex: 1;
  box-flex: 1;
  
  text-align: right;
  margin-top: 27px;
}

.entries nav.controls a {
  padding-right: 9px;
  margin-right: 9px;
  border-right: rgb(216, 216, 216) 1px solid;
}

.entries nav.controls a:first-child:before {
  content: '\00ab \0020';
}

.entries nav.controls a:last-child {
  border-right: none;
}

.entries nav.controls a:last-child:after {
  content: '\0020 \00bb';
}

/**
 * Tooltips are shelved for the time being. This may be something to look into
 * once the rest of the application is up and running
 */
/**
aside#tooltip {
  background: #111;
  background: rgba(0, 0, 255, 0.8);
  border-radius: 0.5em;
  padding: 0.5em;
  color: rgb(0, 0, 0);
  
  height: 300px;
  width: 300px;
  white-space: nowrap;
  overflow: hidden;

  position: absolute;
  display: block;
  z-index: 98;
}

aside#tooltip:before {
  border: solid;
  border-color: #111 transparent;
  border-width: 0.6em 0 0.6em 0.6em;
  
  display: block;
  position: absolute;
  z-index: 99;
}

aside#tooltip a {
  color: rgb(0, 0, 0);
}

aside#tooltip img {
  position: relative;
  float: left;
  
  padding-right: 30px;
}

aside#tooltip p {
  width: 40%;
  overflow: hidden;
  
  background: rgb(255, 255, 32);
}

aside#tooltip h3 {
  margin-bottom: 0;
  padding-bottom: 0;
}

aside#tooltip h4 {
  margin-bottom: 18px;
}
*/

/**
 * Third level pages contain specific information on a given resource. These are
 * very similar to the featured_item view with a little more judicious use of
 * white space
 */
.item_details {
  margin-top: 18px;
  padding-right: 60px;
  
  display: -webkit-box;
  display: box;
}

.item_details img {
  -webkit-box-flex: 1;
  box-flex: 1;
  padding-right: 30px;
}

.item_details .grouping {
  margin: 18px 0;
}

.item_details .details {
  -webkit-box-flex: 5;
  box-flex: 5;
}

.item_details h1, .item_details .creator,
.item_details publication_date, .item_details .status {
  padding-bottom: 0;
  margin-bottom: 9px;
}

.item_details .marquee {
  margin: 18px 0 0 0;
  font-size: 120%;
}

.item_details .summary quote {
  font-style: italic;
}

.label_and_value {
  display: -webkit-box;
  display: box;
  -webkit-box-flex: 1;
  box-flex: 1;
  -webkit-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-pack: start;
  box-pack: start;
  
  margin-bottom: 9px;
}

.label_and_value > .label {
  display: block;
  -webkit-box-flex: 1;
  box-flex: 1;
  
  min-width: 120px;
  font-weight: bold;
}

.label_and_value > .value {
  display: block;
  -webkit-box-flex: 2;
  box-flex: 2;
  
  min-width: 240px;
  text-align: left;
}

/**
 * One key element of the item details page is the ability to page back and
 * forth. The trick will be keeping the information accurate with the previous
 * views but the presentation is simple enough.
 */
nav.timeline {
  display: -webkit-box;
  display: box;
  
  -webkit-box-align: horizontal;
  box-align: horizontal;
  
  -webkit-box-flex: 1;
  box-flex: 1;
  
  margin-top: 18px;
}

nav.timeline a {
  display: block;
}

nav.timeline a.previous {
  -webkit-box-flex: 1;
  box-flex: 1;
  text-align: left;
  padding-right: 120px;
}

nav.timeline a.previous:before {
  content: ' \00ab \0020';
}

nav.timeline a.next {
  -webkit-box-flex: 1;
  box-flex: 1;
  text-align: right;
  padding-left: 120px;
}

nav.timeline a.next:after {
  content: ' \0020 \00bb';
}

/**
 * Styles that help craft the form into a logical order instead of a total
 * mess. See the basic wireframes for the general idea.
 */
#search_form {
  display: -webkit-box;
  display: box;
  -webkit-box-flex: 1;
  box-flex: 1;
  -webkit-box-orient: vertical;
  box-orient: vertical;
  
  margin-top: 36px;
}

#search_form nav.controls {
  -webkit-box-flex: 1;
  box-flex: 1;
  
  margin: 9px 0;
  text-align: right;
  /**
   * By default these are hidden unless Javascript is enabled */
   display: none;
}

#search_form nav.controls a {
  padding-right: 30px;
}

#search_form nav.controls a:last-child {
  padding-right: 0;
}

#search_form nav.controls a:before {
  content: "\0020 \00ab";
}

#search_form nav.controls a:after {
  content: '\0020 \00bb';
}

#search_form input[type='text'] {
  border-radius: 10px;
  padding: 9px 10px;
  font-size: 1rem;
}

#search_form fieldset {
  border: 0;
  margin: 0 0 18px 0;
  padding: 9px 0;
  
  display: -webkit-box;
  display: box;
  -webkit-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-align: start;
  box-align: start;
  -webkit-box-pack: start;
  box-pack: start;
}

#search_form fieldset > label {
  display: inline-block;
  -webkit-box-flex: 1;
  box-flex: 1;
  
  min-width: 100px;  
  vertical-align: top;
  margin-right: 30px;
}

#search_form fieldset .value {
  display: inline-block;
  -webkit-box-flex: 3;
  box-flex: 3;
  
  min-width: 450px;
  vertical-align: top;
  text-align: left;
}

#search_form select {
  margin: 0 15px;
  width: 10em;
}

#search_form select:first-child {
  margin-left: 0px;
}

#search_form fieldset .checkgroup {
  display: -webkit-box;
  display: box;
  box-orient: vertical;
  box-pack: start;
  box-align: start;
  
  margin-bottom: 9px;
  text-align: left;
}

#search_form fieldset .checkgroup > label {
  display: block;
  width: 210px;
  margin-right: 30px;
  overflow: hidden;
}

#search_form fieldset .checkgroup input[type='checkbox'] {
  margin-right: 15px;
}

#search_form fieldset.buttons {
  display: -webkit-box;
  display: box;
  -webkit-box-flex: 1;
  box-flex: 1;
  
  text-align: right;
}

#search_form .buttons input[type='reset'],
#search_form .buttons input[type='submit'] {
  -webkit-box-flex: 1;
  box-flex: 1;

  border-radius: 9px;
  padding: 9px;
  margin-left: 30px;
  width: 120px;
  
  font-size: 1.05rem;
  text-align: center;
  background: rgb(107, 171, 214);
}

/**
 * Last up in the first pass is the page footer. The background should be the
 * same color as the header. The copyright statement should eat up 20% of the
 * space. The rest should be consumed by quick links to the main sections of the
 * site in a fat footer
 */
footer {
  display: -webkit-box;
  display: box;
  -webkit-box-flex: 1;
  box-flex: 1;
  clear: both;
  
  -webkit-box-orient: horizontal;
  box-orient: horizontal;
  padding: 10px 0;
  margin-top: 18px;
}

footer nav {
  -webkit-box-flex: 4;
  box-flex: 4;
  
  -webkit-box-orient: horizontal;
  box-orient: horizontal;
  
  min-width: 400px;
}

footer nav a {
  -webkit-box-flex: 1;
  box-flex: 1;
  box-orient: horizontal;
  
  min-width: 150px;
  padding: 0 20px;
  color: rgb(255, 255, 255);
  border-right: rgb(255, 255, 255) 1px solid;
}

footer nav a:last-child {
  border-right: 0;
}

footer .copyright  {
  -webkit-box-flex: 1;
  box-flex: 1;
  min-width: 150px;
}

footer .copyright {
  padding: 0;
  margin: 0;
}